syntax = "proto3";  // 定義要使用的 protocol buffer 版本

option go_package = "communicate/pb";
package communicate;

import "google/protobuf/empty.proto";

message RemoteRequest {
  map<string, double> values = 1;
}

message GetSensorsRequest {
  repeated string name = 1;
}

message GetSensorsResponse {
  message Sensor {
    string name = 1;
    double value = 2;
    bool is_conn_err = 3;
    string error = 4;
    string error_detail = 5;
    bool isFilter =6;
    repeated double value_list = 7;
    bytes data = 8;
  }
  repeated Sensor sensors = 1;
  repeated string missing_fields = 2;
}

message ConfigDebugRequest {
  bytes configBinaryData = 1;
}

message ConfigDebugResponse {
  map<string,ValueDetail> values = 1;

  message ValueDetail {
    double value = 1;
    string err_msg = 2;
  }
}

service CommunicateService {
  // remote
  rpc Remote(RemoteRequest) returns (google.protobuf.Empty) {};
  // get sensors info
  rpc GetSensors(GetSensorsRequest) returns (GetSensorsResponse) {};
  // 對單一config做一次性debug
  rpc ConfigDebug(ConfigDebugRequest) returns (ConfigDebugResponse) {};
}